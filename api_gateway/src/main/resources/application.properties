# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
server.port=8000

# ===================================================================
# SPRING APPLICATION CONFIGURATION
# ===================================================================
spring.application.name=api-gateway

# ===================================================================
# DATABASE (DataSource) CONFIGURATION
# ===================================================================
spring.datasource.url=jdbc:sqlite:C:/sqlite3/ets_api.db
spring.datasource.driver-class-name=org.sqlite.JDBC

# ===================================================================
# JPA & HIBERNATE CONFIGURATION
# ===================================================================
# 애플리케이션 실행 시 엔티티와 테이블이 일치하는지 검증만 하고, 스키마는 변경하지 않음
spring.jpa.hibernate.ddl-auto=validate
# SQLite DB 방언(Dialect) 설정
spring.jpa.database-platform=org.sqlite.hibernate.dialect.SQLiteDialect
# 실행되는 JPA 쿼리를 로그로 출력
spring.jpa.show-sql=true

# ===================================================================
# SPRING CLOUD GATEWAY CONFIGURATION
# ===================================================================
# WebFlux가 정적 리소스를 /static/** 경로에서만 찾도록 제한하여 API 경로와 충돌 방지
spring.webflux.static-path-pattern=/static/**

# 모든 경로(/**)의 요청을 처리할 기본 라우트 정의
spring.cloud.gateway.routes[0].id=dynamic_route
spring.cloud.gateway.routes[0].predicates[0]=Path=/**
# 최종 URI는 필터에서 동적으로 결정됨. 절대 호출되지 않는 placeholder 사용(RFC 2606 reserved TLD)
spring.cloud.gateway.routes[0].uri=http://example.invalid
# 임시 URI가 외부에 노출되지 않도록 Host 헤더 제거
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Host

# 서비스 디스커버리 비활성화 (lb:// 사용 안 함)
spring.cloud.gateway.discovery.locator.enabled=false

# ---- Gateway HttpClient 세부 설정 (프록시/타임아웃) ----
# 시스템(운영체제/브라우저) 프록시 사용 금지
spring.cloud.gateway.httpclient.proxy.use-system-properties=false
# 연결/응답 타임아웃 보강
spring.cloud.gateway.httpclient.connect-timeout=10000
spring.cloud.gateway.httpclient.response-timeout=120s

# ===================================================================
# CUSTOM APPLICATION CONFIGURATION
# ===================================================================
app.api.salt=ets-ai-secret-api-salt

# ===================================================================
# LOGGING (진단 시 유용, 필요 없으면 INFO로 낮추세요)
# ===================================================================
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty.http.client=DEBUG
